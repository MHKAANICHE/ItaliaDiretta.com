Étape 1: Configuration de l'environnement Python
-Sous Visual Studio Code :
-Ouverture de Visual Studio Code :
Lancez Visual Studio Code sur votre ordinateur.
Création d'un Nouveau Dossier de Projet :
Ouvrez Visual Studio Code et créez un nouveau dossier pour votre projet. Vous pouvez le faire en sélectionnant "File" > "Add Folder to Workspace".
-Ouverture du Terminal :
Une fois dans le dossier de votre projet, ouvrez le terminal de Visual Studio Code en sélectionnant "View" > "Terminal" ou en utilisant le raccourci clavier Ctrl + `.
Vérification de l'Installation de Python :
Assurez-vous que Python est installé en exécutant la commande suivante dans le terminal :
python --version
Si Python est installé correctement, vous devriez voir la version de Python que vous avez installée.
-Création de l'Environnement Virtuel (Facultatif) :
Créez un environnement virtuel pour votre projet en utilisant la commande suivante :
python -m venv venv
Activez l'environnement virtuel :
Ouvrir PowerShell en tant qu'administrateur :
Cliquez avec le bouton droit sur l'icône PowerShell dans le menu de démarrage.
Sélectionnez "Exécuter en tant qu'administrateur".
Changer la politique d'exécution temporairement :
Dans la fenêtre PowerShell, exécutez la commande suivante pour autoriser l'exécution des scripts uniquement pour cette session :
Set-ExecutionPolicy Bypass -Scope Process -Force
Naviguer vers le répertoire du projet :
Utilisez la commande cd pour naviguer vers le répertoire de votre projet. Par exemple :
cd D:\CODING_DOJO\2_Python\ItaliaDiretta.com
Activer l'environnement virtuel :
Une fois dans le répertoire de votre projet, essayez à nouveau d'activer l'environnement virtuel avec la commande :
.\venv\Scripts\Activate
Assurez-vous que le chemin spécifié est correct et correspond à l'emplacement réel de votre dossier virtuel.
Installation des Bibliothèques Python :
Dans le terminal, installez les bibliothèques nécessaires avec la commande suivante :
Si vous avez activé votre environnement virtuel dans PowerShell et que vous souhaitez installer les bibliothèques nécessaires, vous pouvez le faire directement depuis PowerShell. Voici comment faire :
Assurez-vous d'avoir votre environnement virtuel activé. Le prompt PowerShell devrait indiquer (venv).
Dans le terminal PowerShell, exécutez la commande suivante pour installer les bibliothèques nécessaires :
pip install beautifulsoup4 requests
Attendez que le processus d'installation soit terminé. Vous devriez voir un message indiquant que les bibliothèques ont été installées avec succès.

La prochaine étape sera de développer le script de scraper. Vous pouvez créer un fichier Python dans votre dossier de projet (par exemple, scraper.py) et commencer à écrire le script. Si vous avez des questions ou si vous avez terminé cette étape, n'hésitez pas à le faire savoir !
---------------
PS D:\CODING_DOJO\2_Python\ItaliaDiretta.com> Set-ExecutionPolicy Bypass -Scope Process -Force   
>>
PS D:\CODING_DOJO\2_Python\ItaliaDiretta.com> .\venv\Scripts\Activate
>>
(venv) PS D:\CODING_DOJO\2_Python\ItaliaDiretta.com> Scripts\Activate.ps1
>> 
(venv) PS D:\CODING_DOJO\2_Python\ItaliaDiretta.com> pip install -r requirements.txt
--------------------
(venv) PS D:\CODING_DOJO\2_Python\ItaliaDiretta.com> python scraper.py
--------------------
pip freeze > requirements.txt
-----------------------------------
pip install -r requirements.txt
-------------------------------------
la lecture des articles et la génération de résumés nécessitent des outils spécifiques. Il existe plusieurs bibliothèques et outils dans le domaine du traitement du langage naturel (NLP) qui peuvent être utilisés pour la lecture, l'analyse et la synthèse de texte. L'une des bibliothèques les plus populaires pour le NLP en Python est spaCy.

Voici comment vous pourriez intégrer spaCy dans votre script pour extraire du texte à partir d'articles et générer des résumés :

Installez spaCy en exécutant la commande suivante dans votre terminal ou PowerShell :
pip install spacy

Téléchargez un modèle de langue spaCy, par exemple, le modèle anglais :
python -m spacy download en_core_web_sm

si vous souhaitez utiliser spaCy avec le modèle italien, vous pouvez télécharger le modèle en exécutant la commande suivante dans votre terminal ou PowerShell :
python -m spacy download it_core_news_sm

Pour traduire les fichiers de synthèse en arabe et les sauvegarder dans un dossier spécifique, vous pouvez utiliser une bibliothèque de traduction comme googletrans pour traduire le texte en arabe. Assurez-vous d'installer cette bibliothèque en exécutant la commande suivante :

pip install googletrans==4.0.0-rc1

-----------------------------------------------
wordpress :
To integrate the publishing of articles generated by your Python code into WordPress using the REST API, you need to set up WordPress, install the necessary plugins, and obtain the API key. Here's a step-by-step guide:

1. Install WordPress:
If you don't have WordPress installed, you can follow these general steps:

Download WordPress:
Visit the official WordPress website and download the latest version.

Create a Database:
Create a MySQL or MariaDB database for WordPress.

Extract WordPress:
Extract the downloaded WordPress ZIP file and place the contents in your web server's root directory.

Configure WordPress:
Open the wp-config-sample.php file, provide your database details, and save it as wp-config.php.

Complete Installation:
Visit your website in a browser to complete the WordPress installation by providing site information, creating an admin account, etc.

2. Install and Configure REST API Plugins:
For REST API authentication, you need to install the JWT Authentication for WP REST API plugin.

Install JWT Authentication:

In your WordPress admin panel, go to Plugins > Add New.
Search for "JWT Authentication for WP REST API."
Install and activate the plugin.
Configure JWT Authentication:

After activation, go to Settings > JWT Authentication.
Set the Secret Key. You can generate a key here.
Save changes.
3. Obtain API Key:
To interact with the WordPress REST API, you'll need an API key. WordPress doesn't provide API keys by default, so you can use your user's credentials to generate one.

Generate API Key:
Go to your WordPress admin panel and navigate to Users > Your Profile.
Scroll down to the "Application Passwords" section.
Add a new application password, and a key will be generated. Note it down.
4. Update Python Code:
Now, you can update your Python script (publish-to-wordpress.py) to use the obtained API key when making requests to the WordPress REST API.

Replace the wordpress_api_key variable with the generated key.

python
Copy code
wordpress_api_key = "your_generated_api_key"
5. Test the Integration:
Run your Python script and check if it publishes articles to your WordPress site.

Important Note:
Ensure your WordPress site is accessible over HTTPS to secure data transmission.
Keep your API key confidential and don't share it publicly.

